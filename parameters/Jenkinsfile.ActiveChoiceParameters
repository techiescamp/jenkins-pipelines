pipeline {
    agent any

    stages {
        stage('Parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            activeChoice(
                                choiceType: 'PT_SINGLE_SELECT',
                                filterLength: 1,
                                filterable: false,
                                name: 'Env',
                                script: groovyScript(
                                    fallbackScript: [
                                        classpath: [],
                                        oldScript: '',
                                        sandbox: true,
                                        script: "return ['Could not get the environments']"
                                    ],
                                    script: [
                                        classpath: [],
                                        oldScript: '',
                                        sandbox: true,
                                        script: "return ['dev', 'stage', 'prod']"
                                    ]
                                )
                            ),
                            [$class: 'CascadeChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: 'Select the AMI from the Dropdown List',
                                name: 'AMI_List',  // It's better to avoid spaces in the name
                                referencedParameters: 'Env', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                        classpath: [], 
                                        sandbox: true, 
                                        script: "return ['Could not get Environment from Env Param']"
                                    ], 
                                    script: [
                                        classpath: [], 
                                        sandbox: true, 
                                        script: '''
                                            if (Env.equals("dev")){
                                                return ["ami-sd2345sd", "ami-asdf245sdf", "ami-asdf3245sd"]
                                            } else if (Env.equals("stage")) {
                                                return ["ami-sd34sdf", "ami-sdf345sdc", "ami-sdf34sdf"]
                                            } else if (Env.equals("prod")) {
                                                return ["ami-sdf34sdf", "ami-sdf34ds", "ami-sdf3sf3"]
                                            }
                                        '''
                                    ]
                                ]
                            ],
                            [$class: 'DynamicReferenceParameter', 
                                choiceType: 'ET_ORDERED_LIST', 
                                description: 'Select the AMI based on the following information', 
                                name: 'Image_Information',  // Avoid spaces in the name
                                referencedParameters: 'Env', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                        classpath: [], 
                                        sandbox: true, 
                                        script: "return ['Could not get AMI Information']"
                                    ], 
                                    script: [
                                        classpath: [], 
                                        sandbox: true, 
                                        script: '''
                                            if (Env.equals("dev")){
                                                return ["ami-sd2345sd: AMI with Java", "ami-asdf245sdf: AMI with Python", "ami-asdf3245sd: AMI with Groovy"]
                                            } else if (Env.equals("stage")) {
                                                return ["ami-sd34sdf: AMI with Java", "ami-sdf345sdc: AMI with Python", "ami-sdf34sdf: AMI with Groovy"]
                                            } else if (Env.equals("prod")) {
                                                return ["ami-sdf34sdf: AMI with Java", "ami-sdf34ds: AMI with Python", "ami-sdf3sf3: AMI with Groovy"]
                                            }
                                        '''
                                    ]
                                ]
                            ]
                        ])
                    ])
                }
            }
        }
    }
}
